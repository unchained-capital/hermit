from sys import stdin, argv
from os.path import basename

from buidl import PSBT

from hermit.coordinator import (
    add_secp256k1_signature,
)

HELP = f"""usage: cat ... | python {basename(__file__)} PRIVATE_KEY_PATH

This program reads an unsigned PSBT (in base64) over STDIN, signs that
PSBT as a coordinator, and prints the resulting PSBT..

The secp256k1 private key at PRIVATE_KEY_PATH is used for signing."""

if __name__ == "__main__":

    if ("--help" in argv) or ("-h" in argv) or len(argv) != 2:
        print(HELP)
        exit(1)

    private_key_path = argv[1]

    raw_unsigned_psbt_base64 = stdin.read().strip()
    if len(raw_unsigned_psbt_base64) == 0:
        print("Input PSBT is required.")
        exit(2)

    psbt = PSBT.parse_base64(raw_unsigned_psbt_base64)
    unsigned_psbt_base64 = psbt.serialize_base64()

    if unsigned_psbt_base64 != raw_unsigned_psbt_base64:
        print("Input PSBT must be generated by buidl.")
        exit(2)

    message = unsigned_psbt_base64.encode("utf8")
    add_secp256k1_signature(psbt, private_key_path)

    print(psbt.serialize_base64())
